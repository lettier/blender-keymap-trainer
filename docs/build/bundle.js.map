{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<!--\n  (C) 2020 David Lettier\n  lettier.com\n-->\n\n<script>\n  import { onMount } from 'svelte';\n\n  let show = false;\n  let totalVisibleKeys = 0;\n  let currentKey = null;\n  let currentKeyIndex = 0;\n  let keymap = [];\n  let flip = false;\n  let dataSaved = false;\n  let reverse = false;\n  let filtering = false;\n  let input;\n\n  function updateTotalVisibleKeys() {\n    totalVisibleKeys = keymap.reduce((a, b) => {\n      if (b.hidden) { return a; }\n      return a + 1;\n    }, 0);\n\n    if (totalVisibleKeys <= 0) {\n      filtering = true;\n    }\n  }\n\n  function updateProgress() {\n    updateTotalVisibleKeys();\n\n    let count = 0;\n\n    currentKeyIndex = 0;\n\n    for (let i = 0; i < keymap.length; ++i) {\n      let key = keymap[i];\n\n      if (key.hidden) { continue; }\n      if (key.id === currentKey.id) { currentKeyIndex = count; break; }\n\n      count += 1;\n    }\n  }\n\n  onMount(async () => {\n    let logo = document.getElementById('logo');\n    let animationEnd = () => { show = true; };\n\n    logo.addEventListener(\"animationend\",       animationEnd);\n    logo.addEventListener(\"webkitAnimationend\", animationEnd);\n\n    let cache = window.localStorage.getItem('blender-keymap-trainer');\n\n    try {\n      cache = JSON.parse(cache);\n    } catch {\n      cache = null;\n    }\n\n    if (cache && cache.currentKey && cache.keymap) {\n      keymap = cache.keymap;\n      currentKey = cache.currentKey;\n      currentKeyIndex = cache.currentKeyIndex;\n      reverse = cache.reverse === true;\n\n      if (currentKey.hidden) { nextKey(0, false); }\n\n      dataSaved = true;\n    } else {\n      const response = await fetch('keymap.json');\n      let keymapRaw = await response.json();\n\n      processRawKeymap(keymapRaw);\n    }\n\n    updateProgress();\n  });\n\n  function processRawKeymap(keymapRaw) {\n    let keymapTemp = [];\n\n    keymapRaw.forEach((e) => {\n      let section = {};\n      let items   = [];\n\n      section.title  = e[0];\n      section.space  = e[1].space_type.replace(/_/g, \" \");\n      section.region = e[1].region_type.replace(/_/g, \" \");\n\n      e[2].items.forEach((i) => {\n        if (i[1] &&\n            i[1].value &&\n            (i[1].value.toLowerCase() === \"press\" ||\n             i[1].value.toLowerCase() === \"click\")\n        ) {\n          let item = {};\n\n          let action = i[0];\n          action = action.split(\".\");\n          if (action[1]) {\n            action[0] = `(${action[0]})`;\n            action[1] = action[1].replace(/_/g, \" \");\n            item.action = `${action[0]} ${action[1]}`;\n          } else {\n            item.action = action[0].replace(/_/g, \" \");\n          }\n\n          item.key   = i[1].type.replace(/_/g, \" \");\n          item.ctrl  = i[1].ctrl ? true : false;\n          item.shift = i[1].shift ? true : false;\n\n          item.properties = [];\n          if (i[2] && i[2].properties && i[2].properties.length > 0) {\n            i[2].properties.forEach((e) => {\n              if (e[1] === \"\") { return; }\n\n              let k = String(e[0]).replace(/_/g, \" \");\n              let v = String(e[1]).replace(/_/g, \" \").replace(/\\./g, \" \");\n\n              item.properties.push(\n                `${k}: ${v}`\n              );\n            });\n          }\n\n          item.section = section;\n\n          item.passed = 0;\n          item.failed = 0;\n\n          item.hidden = false;\n\n          item.id = keymapTemp.length;\n\n          items.push(item);\n\n          keymapTemp.push(item);\n        }\n      });\n    });\n\n    keymap = keymapTemp;\n\n    currentKeyIndex = Math.floor(Math.random() * keymap.length);\n    currentKey = keymap[currentKeyIndex];\n  };\n\n  function nextKey(passed, skip) {\n    if (passed == 1) {\n      currentKey.passed += 1;\n    } else if (passed == -1) {\n      currentKey.failed += 1;\n    }\n\n    updateTotalVisibleKeys();\n\n    if (totalVisibleKeys === 1) {\n      for (let i = 0; i < keymap.length; ++i) {\n        let key = keymap[i];\n\n        if (!key.hidden) { currentKey = key; break; }\n      }\n    } else if (totalVisibleKeys > 1 ) {\n      if (skip) {\n        let index = currentKey.id;\n\n        while (true) {\n          index += 1;\n          if (index >= keymap.length) { index = 0; }\n          let key = keymap[index];\n          if (!key.hidden && key.id !== currentKey.id) {\n            currentKey = key;\n            break;\n          }\n        }\n\n      } else {\n        let visibleKeys = keymap.reduce((a, b) => {\n          if (b.hidden || b.id === currentKey.id) { return a; }\n\n          a.push(b);\n          return a;\n        }, []);\n        let totalFailed = visibleKeys.reduce((a, b) => {\n          if (b.hidden) { return a; }\n\n          let failed = b.failed - b.passed;\n          if (failed < 0) { failed = 0; };\n\n          return a + failed + 1;\n        }, 0);\n\n        let number = Math.floor(Math.random() * (totalFailed + 1));\n        let count = 0\n\n        for (let i = 0; i < visibleKeys.length; ++i) {\n          let key = visibleKeys[i];\n          let failed = key.failed + 1;\n\n          count += failed;\n\n          if (number <= count) {\n            currentKey = key;\n            break;\n          }\n        }\n      }\n\n      currentKey = currentKey;\n      keymap = keymap;\n    }\n\n    updateProgress();\n\n    flip = false;\n\n    window.localStorage.setItem(\n      'blender-keymap-trainer',\n      JSON.stringify({\n        reverse: reverse,\n        currentKey: currentKey,\n        currentKeyIndex: currentKeyIndex,\n        keymap: keymap\n      })\n    );\n\n    dataSaved = true;\n  }\n\n  function clearData(force) {\n    if (force || window.confirm(\"Clear data?\")) {\n      window.localStorage.removeItem('blender-keymap-trainer');\n      dataSaved = false;\n    }\n  }\n\n  function upload() {\n    let file = input.files[0];\n    let fileReader = new FileReader();\n\n    fileReader.readAsText(file);\n\n    fileReader.onload = () => {\n      try {\n        processRawKeymap(JSON.parse(fileReader.result));\n        updateProgress();\n        clearData(true);\n        window.alert(\"Keymap uploaded.\");\n      } catch {\n        window.alert(\"Could not process upload.\");\n      };\n    };\n  }\n\n  function updateHidden(type, key) {\n    if (type === \"key\") {\n      key.hidden = !key.hidden;\n      key = key;\n    } else if (type === \"section.title\") {\n      let hidden = !key.hidden;\n\n      keymap.forEach((e) => {\n        if (e.section.title !== key.section.title) {\n          return;\n        }\n\n        e.hidden = hidden;\n        e = e;\n      });\n    } else if (type === \"section.region\") {\n      let hidden = !key.hidden;\n\n      keymap.forEach((e) => {\n        if (e.section.region !== key.section.region) {\n          return;\n        }\n\n        e.hidden = hidden;\n        e = e;\n      });\n    } else if (type === \"section.space\") {\n      let hidden = !key.hidden;\n\n      keymap.forEach((e) => {\n        if (e.section.space !== key.section.space) {\n          return;\n        }\n\n        e.hidden = hidden;\n        e = e;\n      });\n    }\n\n    keymap = keymap;\n\n    nextKey(0, false);\n  }\n</script>\n\n<main>\n    <div class=\"main-container-column {show ? 'logo-background fade-in': ''}\">\n      {#if !show}\n        <img id=\"logo\" class=\"logo fade-out\" src=\"logo.svg\" alt=\"logo\">\n      {/if}\n      {#if show && keymap.length > 0 && !filtering}\n        <div class=\"main-container-row fade-in\">\n          <div></div>\n          <div class=\"card\">\n            {#if currentKey}\n              <div class=\"count\">\n                {currentKeyIndex + 1} / {totalVisibleKeys}\n              </div>\n              <div class=\"section-title\">\n                {currentKey.section.title}\n              </div>\n              <div class=\"breadcrumbs\">\n                <div class=\"breadcrumb\">\n                  {currentKey.section.region}\n                </div>\n                {#if currentKey.section.space !== \"EMPTY\"}\n                  <div class=\"breadcrumb arrow-right\">\n                  </div>\n                  <div class=\"breadcrumb\">\n                    {currentKey.section.space}\n                  </div>\n                {/if}\n              </div>\n              <div class=\"card-content-container {flip ? 'flip-card' : ''}\" on:click=\"{() => flip = !flip}\">\n                {#if (!flip && !reverse) || (flip && reverse)}\n                  <div class=\"card-content card-content-front {reverse ? 'rotated' : ''}\">\n                    <div class=\"card-content-text\">\n                      {#if currentKey.ctrl}\n                        Ctrl +\n                      {/if}\n                      {#if currentKey.shift}\n                        Shift +\n                      {/if}\n                      {currentKey.key}\n                    </div>\n                  </div>\n                {/if}\n                {#if flip || reverse}\n                  <div class=\"card-content card-content-back {reverse ? '' : 'rotated'}\">\n                    <div class=\"card-content-text\">\n                      <div>\n                        {currentKey.action}\n                      </div>\n                      {#each currentKey.properties as property}\n                        <div class=\"properties\">\n                          {property}\n                        </div>\n                      {/each}\n                    </div>\n                  </div>\n                {/if}\n              </div>\n              <div class=\"answers\">\n                <div class=\"button positive-answer {flip ? '' : 'disabled'}\"\n                    on:click=\"{ () => { if (flip) nextKey(1, false); }}\">\n                  {#if flip}👏{/if} Got it!\n                </div>\n                <div class=\"button skip-answer {flip ? 'disabled' : ''}\" on:click=\"{ () => { if (!flip) nextKey(0, true); } }\">\n                  {#if !flip}💤{/if} Skip\n                </div>\n                <div class=\"button negative-answer {flip ? '' : 'disabled'}\"\n                    on:click=\"{ () => { if (flip) nextKey(-1, false); }}\">\n                  {#if flip}🤕{/if} Missed it!\n                </div>\n              </div>\n            {/if}\n            <div class=\"controls\">\n              <div class=\"button reverse-control margin-right {flip ? '' : 'disabled'}\"\n                   on:click=\"{ () => { if (flip) reverse = !reverse } }\">\n                {#if flip}➰{/if} Reverse\n              </div>\n              <div class=\"button upload-control margin-right\">\n                <label class=\"upload-label\">\n                  <input type=\"file\" accept=\"application/json\" bind:this={input} on:change=\"{ () => upload() }\">\n                  📂 Upload\n                </label>\n              </div>\n              <div class=\"button filter-control margin-right\" on:click=\"{ () => filtering = true }\">\n                📝 Filter\n              </div>\n              <div class=\"button delete-control {dataSaved ? '' : 'disabled'}\"\n                   on:click=\"{ () => { if (dataSaved) clearData(false); } }\">\n                {#if dataSaved}🗑{/if} Clear\n              </div>\n            </div>\n          </div>\n          <div></div>\n        </div>\n      {/if}\n      {#if show && keymap.length && filtering}\n        <div class=\"filtering-container fade-in\">\n          <div class=\"count\">\n            {totalVisibleKeys}\n          </div>\n          <div class=\"filter-lines-container\">\n            {#each keymap as key, i}\n              {#if i === 0}\n                <div class=\"filter-line filter-lines-header\">\n                  <div class=\"filter-line-item\">\n                    KEY ACTION\n                  </div>\n                  <div class=\"filter-line-item\">\n                    SECTION\n                  </div>\n                  <div class=\"filter-line-item\">\n                    SPACE\n                  </div>\n                  <div class=\"filter-line-item\">\n                    REGION\n                  </div>\n                </div>\n              {/if}\n              <div class=\"filter-line {key.hidden ? 'disabled' : ''} {(i % 2 === 0) ? 'filter-line-a' : 'filter-line-b'}\">\n                <div class=\"filter-line-item\" on:click=\"{ () => updateHidden('key', key) }\">\n                  {#if key.ctrl}\n                    Ctrl +\n                  {/if}\n                  {#if key.shift}\n                    Shift +\n                  {/if}\n                  {key.key}\n                  <br>\n                  {key.action}\n                </div>\n                <div class=\"filter-line-item\" on:click=\"{ () => updateHidden('section.title', key) }\">\n                  {key.section.title}\n                </div>\n                <div class=\"filter-line-item\" on:click=\"{ () => updateHidden('section.space', key) }\">\n                  {key.section.space}\n                </div>\n                <div class=\"filter-line-item\" on:click=\"{ () => updateHidden('section.region', key) }\">\n                  {key.section.region}\n                </div>\n              </div>\n            {/each}\n          </div>\n          <div class=\"filtering-controls\">\n            <div class=\"button done-control {totalVisibleKeys <= 0 ? 'disabled' : ''}\"\n                 on:click=\"{ () => { if (totalVisibleKeys > 0) { filtering = false; nextKey(0, false); } } }\">\n              {#if totalVisibleKeys > 0}📝{/if} Done\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n</main>\n\n<style>\n  main {\n    border: 0px solid transparent;\n    margin: 0px;\n    width: 100%;\n    height: 100%;\n  }\n\n  input[type=\"file\"] {\n    display: none;\n  }\n\n  .main-container-column {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    height: 100%;\n  }\n\n  .logo {\n    width: 90%;\n  }\n\n  .main-container-row {\n    width: 100%;\n    height: 60%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  .card {\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    perspective: 1000px;\n  }\n\n  .card-content-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    height: 20vh;\n    cursor: pointer;\n    position: relative;\n    transition: transform 0.5s;\n    transform-style: preserve-3d;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    height: 100%;\n  }\n\n  .card-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    align-self: center;\n    font-size: 6vh;\n    position: absolute;\n    height: 40%;\n    width: 100%;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n  }\n\n  .card-content-text {\n    padding: 1px;\n  }\n\n  .card-content-front {\n    background-color: #c7dcd0;\n  }\n\n  .card-content-back {\n    color: white;\n    background-color: #7f708a;\n  }\n\n  .flip-card {\n    transform: rotateY(180deg);\n  }\n\n  .rotated {\n    transform: rotateY(180deg);\n    z-index: 100;\n  }\n\n  .count {\n    color: white;\n    text-align: center;\n    margin-bottom: 5px;\n    color: #625565;\n  }\n\n  .section-title {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: center;\n    align-items: center;\n    background-color: #4d9be6;\n    padding: 10px;\n    color: white;\n    font-size: 3.2vh;\n    margin-bottom: 5px;\n  }\n\n  .breadcrumbs {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: center;\n    align-items: center;\n    background-color: #484a77;\n    padding: 10px;\n  }\n\n  .breadcrumb {\n    color: white;\n    font-size: 3vh;\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n\n  .arrow-right {\n    width: 0;\n    height: 0;\n    margin-left: 10px;\n    margin-right: 10px;\n    border-top: 10px solid transparent;\n    border-bottom: 10px solid transparent;\n    border-left: 10px solid white;\n  }\n\n  .answers {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: space-around;\n    align-items: center;\n    height: 15%;\n    min-height: 4vh;\n  }\n\n  .button {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    cursor: pointer;\n    color: white;\n    font-size: 3vh;\n    padding-left: 10px;\n    padding-right: 10px;\n    height: 100%;\n    width: 100%;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  .positive-answer {\n    background-color: #0eaf9b;\n  }\n\n  .negative-answer {\n    background-color: #e83b3b;\n  }\n\n  .skip-answer {\n    background-color: #f04f78;\n    margin-right: 5px;\n    margin-left: 5px;\n  }\n\n  .controls {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: space-around;\n    align-items: center;\n    margin-top: 5px;\n    height: 15%;\n    min-height: 4vh;\n  }\n\n  .reverse-control {\n    background-color: #fb6b1d;\n  }\n\n  .upload-control {\n    background-color: #4d65b4;\n    cursor: pointer;\n  }\n\n  .upload-label {\n    cursor: pointer;\n  }\n\n  .filter-control {\n    background-color: #905ea9;\n  }\n\n  .delete-control {\n    background-color: #c32454;\n  }\n\n  .properties {\n    font-size: 2vh;\n  }\n\n  .filtering-container {\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n    height: 60%;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  .filter-lines-container {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  .filtering-controls {\n    margin-top: 5px;\n    width: 100%;\n  }\n\n  .filter-line {\n    display: flex;\n    flex-direction: row;\n    justify-content: stretch;\n    width: 100%;\n    color: white;\n    padding: 5px;\n    margin-bottom: 5px;\n  }\n\n  .filter-line-item {\n    width: 25%;\n    padding-left: 5px;\n    cursor: pointer;\n  }\n\n  .filter-line-item:hover {\n    color: #2e222f;\n    background-color: #a884f3;\n  }\n\n  .filter-lines-header {\n    background-color: #753c54;\n  }\n\n  .filter-line-a {\n    background-color: #3e3546;\n  }\n\n  .filter-line-b {\n    background-color: #625565;\n  }\n\n  .done-control {\n    height: 6vh;\n    background-color: #905ea9;\n  }\n\n  .disabled {\n    cursor: default;\n    background-color: #3e3546;\n    color: #625565;\n  }\n\n  .margin-right {\n    margin-right: 5px;\n  }\n\n  .fade-in {\n    opacity: 1;\n    animation: fadeIn ease-in-out 1s;\n  }\n\n  .fade-out {\n    opacity: 0;\n    animation: fadeOut ease-in-out 2s;\n  }\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes fadeOut {\n    0% {\n      opacity: 1;\n    }\n    60% {\n      opacity: 0.9;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @media screen and (max-width: 1280px) {\n    .main-container-column {\n      height: 100%;\n      width: 100%;\n    }\n\n    .main-container-row {\n      width: 100%;\n      height: 80%;\n    }\n\n    .card {\n      width: 85%;\n    }\n\n    .filtering-container {\n      width: 90%;\n      height: 90%;\n    }\n\n    .section-title {\n      font-size: 3vw;\n    }\n\n    .breadcrumb {\n      font-size: 2vw;\n    }\n\n    .card-content {\n      font-size: 4vw;\n    }\n\n    .button {\n      font-size: 3vw;\n    }\n  }\n\n  @media screen and (max-width: 600px) {\n    .filter-line {\n      font-size: 2.8vw;\n    }\n\n    .section-title {\n      font-size: 4vw;\n    }\n\n    .breadcrumb {\n      font-size: 4vw;\n    }\n\n    .button {\n      font-size: 4.5vw;\n    }\n  }\n\n  @media screen and (max-width: 470px) {\n    .button {\n      font-size: 4vw;\n    }\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_destroy","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","section","title","region","key","ctrl","shift","action","properties","hidden","input","show","totalVisibleKeys","currentKey","currentKeyIndex","keymap","flip","dataSaved","reverse","filtering","updateTotalVisibleKeys","reduce","updateProgress","count","id","processRawKeymap","keymapRaw","keymapTemp","e","space_type","replace","region_type","items","toLowerCase","item","split","type","k","String","v","passed","failed","Math","floor","random","nextKey","skip","index","visibleKeys","totalFailed","number","window","localStorage","setItem","JSON","stringify","clearData","force","confirm","removeItem","upload","file","files","fileReader","FileReader","readAsText","onload","parse","result","alert","updateHidden","logo","getElementById","animationEnd","cache","getItem","response","fetch","json","[object Object]","destroy_component","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","body"],"mappings":"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"}